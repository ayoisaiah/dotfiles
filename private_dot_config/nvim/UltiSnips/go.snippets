snippet fh "Handler Func" b
func $1(w http.ResponseWriter, r *http.Request) {
	$2
}$0
endsnippet

snippet ft "Test Function" b
func Test$1(t *testing.T) {
	$2
}$0
endsnippet

snippet te "Unexpected test error" b
t.Fatalf("Unexpected error: %v", err)
endsnippet

snippet fn "Function" b
func $1($2) $3 {
	$4
}$0
endsnippet

snippet fs "Struct method" b
func ($1) $2($3) $4 {
	$5
}$0
endsnippet

snippet fhh "ServeMux Handler" b
func $1($2) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		if r.URL.Path != "$3" {
			$4
			return
		}

		switch r.Method {
		case "GET":
			$5
		default:
			http.Error(w, "Method not allowed", http.StatusMethodNotAllowed)
		}
	}
}$0
endsnippet

snippet ife "Generic error handling" b
if err != nil {
	$1
}$0
endsnippet

snippet ifee "Error handing" b
if err := $1; err != nil {
	$2
}$0
endsnippet

snippet imp "Multiline import" b
import (
	"$1"
)$0
endsnippet

snippet errl "Error with log.Fatal()" b
if err != nil {
	log.Fatal(err)
}
$0
endsnippet

snippet fl "fmt.Println" b
fmt.Println($1)$0
endsnippet

snippet ff "fmt.Printf" b
fmt.Printf("$1", $2)$0
endsnippet

snippet fst "fmt.Printf" b
fmt.Printf("%+v\n", $1)$0
endsnippet

snippet ts "New struct type" b
type $1 struct {
	$2
}$0
endsnippet

snippet ti "New interface type" b
type $1 interface {
	$2
}$0
endsnippet

snippet lf "Log.fatalln" b
log.Fatalln($1)$0
endsnippet

snippet pp "Pretty print" b
func prettyPrint(i interface{}) string {
	s, _ := json.MarshalIndent(i, "", "\t")
	return string(s)
}
endsnippet
